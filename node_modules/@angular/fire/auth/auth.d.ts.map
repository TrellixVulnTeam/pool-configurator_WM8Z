{"version":3,"file":"auth.d.ts","sources":["auth.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA","sourcesContent":["import { NgZone, InjectionToken } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FirebaseOptions, FirebaseAppConfig, ɵPromiseProxy } from '@angular/fire';\r\nimport firebase from 'firebase/app';\r\nexport interface AngularFireAuth extends ɵPromiseProxy<firebase.auth.Auth> {\r\n}\r\ndeclare type UseEmulatorArguments = [string, number];\r\nexport declare const USE_EMULATOR: InjectionToken<UseEmulatorArguments>;\r\nexport declare const SETTINGS: InjectionToken<firebase.auth.AuthSettings>;\r\nexport declare const TENANT_ID: InjectionToken<string>;\r\nexport declare const LANGUAGE_CODE: InjectionToken<string>;\r\nexport declare const USE_DEVICE_LANGUAGE: InjectionToken<boolean>;\r\nexport declare const PERSISTENCE: InjectionToken<string>;\r\nexport declare class AngularFireAuth {\r\n    /**\r\n     * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\r\n     */\r\n    readonly authState: Observable<firebase.User | null>;\r\n    /**\r\n     * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\r\n     */\r\n    readonly idToken: Observable<string | null>;\r\n    /**\r\n     * Observable of the currently signed-in user (or null).\r\n     */\r\n    readonly user: Observable<firebase.User | null>;\r\n    /**\r\n     * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\r\n     * helper properties for getting different data associated with the token as well as all the decoded payload claims\r\n     * (or null).\r\n     */\r\n    readonly idTokenResult: Observable<firebase.auth.IdTokenResult | null>;\r\n    /**\r\n     * Observable of the currently signed-in user's credential, or null\r\n     */\r\n    readonly credential: Observable<Required<firebase.auth.UserCredential> | null>;\r\n    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, platformId: Object, zone: NgZone, _useEmulator: any, // can't use the tuple here\r\n    _settings: any, // can't use firebase.auth.AuthSettings here\r\n    tenantId: string | null, languageCode: string | null, useDeviceLanguage: boolean | null, persistence: string | null);\r\n}\r\nexport {};\r\n"]}
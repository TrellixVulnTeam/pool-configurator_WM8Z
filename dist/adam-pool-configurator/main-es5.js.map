{"version":3,"sources":["webpack:///src/app/modules/configurator/configurator.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/modules/shared/shared.module.ts","webpack:///src/app/modules/configurator/components/pool-service/pool-service.component.ts","webpack:///src/app/modules/configurator/components/pool-service/pool-service.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modules/dashboard/dashboard.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/modules/configurator/components/contact-info/contact-info.component.ts","webpack:///src/app/modules/configurator/components/contact-info/contact-info.component.html","webpack:///src/app/modules/configurator/components/pool-color/pool-color.component.ts","webpack:///src/app/modules/configurator/components/pool-color/pool-color.component.html","webpack:///src/app/modules/configurator/components/pool-tech/pool-tech.component.ts","webpack:///src/app/modules/configurator/components/pool-tech/pool-tech.component.html","webpack:///src/app/modules/dashboard/components/dashboard/dashboard.component.html","webpack:///src/app/modules/dashboard/components/dashboard/dashboard.component.ts","webpack:///src/app/modules/configurator/components/pool-form/pool-form.component.ts","webpack:///src/app/modules/configurator/components/pool-form/pool-form.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///src/app/modules/shared/shell/shell.component.ts","webpack:///src/app/modules/shared/shell/shell.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ConfiguratorModule","environment","production","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","components","modules","SharedModule","PoolServiceComponent","AppComponent","title","DashboardModule","AppModule","initializeApp","ContactInfoComponent","PoolColorComponent","PoolTechComponent","DashboardComponent","projects","PoolFormComponent","routes","AppRoutingModule","forRoot","bootstrapModule","err","console","error","ShellComponent","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PoolFormComponent } from './components/pool-form/pool-form.component';\r\nimport { PoolColorComponent } from './components/pool-color/pool-color.component';\r\nimport { PoolTechComponent } from './components/pool-tech/pool-tech.component';\r\nimport { PoolServiceComponent } from './components/pool-service/pool-service.component';\r\nimport { ContactInfoComponent } from './components/contact-info/contact-info.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PoolFormComponent,\r\n    PoolColorComponent,\r\n    PoolTechComponent,\r\n    PoolServiceComponent,\r\n    ContactInfoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    PoolFormComponent,\r\n    PoolColorComponent,\r\n    PoolTechComponent,\r\n    PoolServiceComponent,\r\n    ContactInfoComponent\r\n  ]\r\n})\r\nexport class ConfiguratorModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n      apiKey: \"AIzaSyB2aT4ZaRrUr2vjHaTkfq33AQUcEw15GRU\",\r\n      authDomain: \"poolkonfigurator.firebaseapp.com\",\r\n      projectId: \"poolkonfigurator\",\r\n      storageBucket: \"poolkonfigurator.appspot.com\",\r\n      messagingSenderId: \"272765769042\",\r\n      appId: \"1:272765769042:web:c4b8b20950b52a4da5d68b\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ShellComponent } from './shell/shell.component';\r\n\r\nconst components = [ShellComponent];\r\n\r\nconst modules = [\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  LayoutModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSnackBarModule,\r\n  RouterModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...components],\r\n  imports: [...modules],\r\n  exports: [\r\n    ...components,\r\n    ...modules,\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pool-service',\r\n  templateUrl: './pool-service.component.html',\r\n  styleUrls: ['./pool-service.component.scss']\r\n})\r\nexport class PoolServiceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>pool-service works!</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'adam-pool-configurator';\r\n}\r\n","<router-outlet></router-outlet>\r\n<app-shell></app-shell>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [  \r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule\r\n  ],\r\n  exports: [\r\n    DashboardComponent\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ConfiguratorModule } from './modules/configurator/configurator.module';\r\nimport { DashboardModule } from './modules/dashboard/dashboard.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuth, AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFirestore, AngularFirestoreModule } from '@angular/fire/firestore';\r\n\r\nimport { SharedModule } from '../app/modules/shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule,\r\n    AppRoutingModule,\r\n    ConfiguratorModule,\r\n    DashboardModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-info',\r\n  templateUrl: './contact-info.component.html',\r\n  styleUrls: ['./contact-info.component.scss']\r\n})\r\nexport class ContactInfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>contact-info works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pool-color',\r\n  templateUrl: './pool-color.component.html',\r\n  styleUrls: ['./pool-color.component.scss']\r\n})\r\nexport class PoolColorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>pool-color works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pool-tech',\r\n  templateUrl: './pool-tech.component.html',\r\n  styleUrls: ['./pool-tech.component.scss']\r\n})\r\nexport class PoolTechComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>pool-tech works!</p>\r\n","<div *ngFor=\"let project of projects\">\r\n    <div class=\"project-card\">\r\n        <span>project #</span>\r\n        <span>{{ project.name }}</span>\r\n        <span>{{ project.adress }}</span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Project } from '../../../../models/project.model';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  projects: Project[];\r\n\r\n  constructor() { \r\n    this.projects = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pool-form',\r\n  templateUrl: './pool-form.component.html',\r\n  styleUrls: ['./pool-form.component.scss']\r\n})\r\nexport class PoolFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>pool-form works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shell',\r\n  templateUrl: './shell.component.html',\r\n  styleUrls: ['./shell.component.scss']\r\n})\r\nexport class ShellComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n    <mat-sidenav-content>\r\n        <ng-content></ng-content>   \r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}